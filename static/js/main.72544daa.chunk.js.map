{"version":3,"sources":["components/Article.js","App.js","reportWebVitals.js","index.js"],"names":["Article","props","href","article","permalink","target","title","App","useState","articles","setArticles","subreddit","setSubreddit","useEffect","fetch","then","res","status","json","data","children","console","warn","className","type","value","onChange","e","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAYeA,MAVf,SAAiBC,GACb,OACI,kCACI,mBAAGC,KAAO,qBAAuBD,EAAME,QAAQC,UAAWC,OAAO,QAAjE,SACI,6BAAKJ,EAAME,QAAQG,aCkCpBC,MArCf,WAEG,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAiCF,mBAAS,UAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KAmBD,OAjBCC,qBAAU,WACTC,MAAM,4BAA8BH,EAAW,SAASI,MACtD,SAAAC,GACqB,MAAfA,EAAIC,OAIRD,EAAIE,OAAOH,MAAK,SAAAI,GACF,MAARA,GACFT,EAAYS,EAAKA,KAAKC,aALxBC,QAAQC,KAAK,kDASlB,CAACX,IAKF,sBAAKY,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,uBAAOC,KAAK,OAAOD,UAAU,QAAQE,MAAOd,EAAWe,SAAU,SAAAC,GAAC,OAAIf,EAAae,EAAEtB,OAAOoB,YAG9F,qBAAKF,UAAU,WAAf,SAEgB,OAAbd,EAAqBA,EAASmB,KAAI,SAACzB,EAAQ0B,GAAT,OAAmB,cAAC,EAAD,CAAqB1B,QAASA,EAAQgB,MAAxBU,MAAmC,SCrBhGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.72544daa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Article(props) {\r\n    return (\r\n        <article>\r\n            <a href= {\"https://reddit.com\" + props.article.permalink} target=\"_self\">\r\n                <h3>{props.article.title}</h3>\r\n            </a>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Article;\r\n","import React, {useState, useEffect} from 'react';\nimport Article from './components/Article'\n\nfunction App() {\n\n   const [articles,setArticles] = useState([]);\n   const [subreddit,setSubreddit] = useState('webdev');\n\n   useEffect(()=>{\n    fetch(\"https://www.reddit.com/r/\" + subreddit +\".json\").then(\n      res => {\n        if (res.status !== 200) {\n          console.warn(\"Warning: Something is wrong with the api.\");\n          return;\n        }\n        res.json().then(data => {\n          if (data != null)\n            setArticles(data.data.children);\n        });\n      }\n    )\n  }, [subreddit]);\n     \n   \n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <input type=\"text\" className=\"input\" value={subreddit} onChange={e => setSubreddit(e.target.value)}/>\n      </header>\n\n      <div className=\"articles\">\n      {\n        (articles !== null) ? articles.map((article,index) => <Article key={index} article={article.data} />): '' \n        }\n      </div>\n    </div>\n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}